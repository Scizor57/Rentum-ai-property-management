# Environment Variables Template
# Copy this to .env and fill in your actual values

# ===========================================
# LOCAL DEVELOPMENT SETUP (.env file)
# ===========================================

# 1. SUPABASE DATABASE
# Get this from your Supabase project dashboard > Settings > Database
# Format: postgresql://postgres:[password]@[host]:5432/postgres
DATABASE_URL=postgresql://postgres:your_password@db.your_project.supabase.co:5432/postgres

# 2. GOOGLE CLOUD VISION API (for OCR)
# Option A: Service Account JSON File (Recommended for local)
GOOGLE_APPLICATION_CREDENTIALS=./google-cloud-credentials.json

# Option B: Individual credentials (if you can't use JSON file)
# GOOGLE_CLOUD_PROJECT_ID=your-project-id
# GOOGLE_CLOUD_PRIVATE_KEY_ID=your-private-key-id  
# GOOGLE_CLOUD_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour private key here\n-----END PRIVATE KEY-----\n"
# GOOGLE_CLOUD_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com
# GOOGLE_CLOUD_CLIENT_ID=your-client-id

# ===========================================
# VERCEL DEPLOYMENT SETUP
# ===========================================
# DON'T create a .env file on Vercel!
# Instead, set these in Vercel Dashboard > Project > Settings > Environment Variables:

# 1. DATABASE_URL (same Supabase URL as above)
# 2. GOOGLE_CLOUD_PROJECT_ID  
# 3. GOOGLE_CLOUD_PRIVATE_KEY_ID
# 4. GOOGLE_CLOUD_PRIVATE_KEY (the full private key with \n characters)
# 5. GOOGLE_CLOUD_CLIENT_EMAIL
# 6. GOOGLE_CLOUD_CLIENT_ID

# ===========================================
# QUICK SETUP STEPS
# ===========================================

# FOR LOCAL DEVELOPMENT:
# 1. Copy this file to .env
# 2. Fill in your Supabase DATABASE_URL
# 3. Add your Google Cloud credentials JSON file or individual values
# 4. Run: python -m uvicorn main:app --reload

# FOR VERCEL DEPLOYMENT:
# 1. Go to Vercel Dashboard > Your Project > Settings > Environment Variables
# 2. Add all the variables listed above
# 3. Deploy from Git
# 4. No .env file needed on Vercel!

# ===========================================
# WHERE TO GET THESE VALUES
# ===========================================

# SUPABASE:
# 1. Go to https://supabase.com/dashboard
# 2. Select your project
# 3. Go to Settings > Database
# 4. Copy the connection string under "Connection string" > "URI"

# GOOGLE CLOUD:
# 1. Go to https://console.cloud.google.com
# 2. Create/select project
# 3. Enable Vision API
# 4. Go to IAM & Admin > Service Accounts
# 5. Create service account with Vision API permissions
# 6. Download JSON key file OR copy individual values

# Rentum AI Backend Environment Configuration
# Copy this content to a new file named .env in the backend folder

# Database Configuration - Supabase
# Replace with your actual Supabase connection string
# Format: postgresql://postgres.[ref]:[password]@aws-0-[region].pooler.supabase.com:5432/postgres
DATABASE_URL=postgresql://postgres.abcdefghijklmnop:your_password@aws-0-us-west-1.pooler.supabase.com:5432/postgres

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
DEBUG=True

# Security Configuration
SECRET_KEY=your-secret-key-here-change-in-production
JWT_SECRET=your-jwt-secret-here-change-in-production

# External Services (for future implementation)
# SMS/OTP Service
TWILIO_ACCOUNT_SID=your-twilio-sid
TWILIO_AUTH_TOKEN=your-twilio-token
TWILIO_PHONE_NUMBER=your-twilio-phone

# Email Service
SENDGRID_API_KEY=your-sendgrid-key
FROM_EMAIL=noreply@rentum.ai

# File Storage
CLOUD_STORAGE_BUCKET=rentum-documents
CLOUD_STORAGE_REGION=ap-south-1

# Google OAuth
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# OCR/AI Services
OCR_SERVICE_API_KEY=your-ocr-api-key
AI_SERVICE_API_KEY=your-ai-api-key

# Payment Gateway (for future implementation)
RAZORPAY_KEY_ID=your-razorpay-key
RAZORPAY_KEY_SECRET=your-razorpay-secret 